// <auto-generated />
using System;
using ControlePedido.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CP.Pedidos.Data.Migrations
{
    [DbContext(typeof(ControlePedidoContext))]
    partial class ControlePedidoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CP.Pedidos.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PagamentoId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("CP.Pedidos.Domain.Entities.PedidoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoItens", (string)null);
                });

            modelBuilder.Entity("CP.Pedidos.Domain.Entities.PedidoStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoStatus", (string)null);
                });

            modelBuilder.Entity("CP.Pedidos.Domain.Entities.PedidoItem", b =>
                {
                    b.HasOne("CP.Pedidos.Domain.Entities.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CP.Pedidos.Domain.ValueObjects.Imagem", "Imagem", b1 =>
                        {
                            b1.Property<Guid>("PedidoItemId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Extensao")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)")
                                .HasColumnName("ExtensaoImagem");

                            b1.Property<string>("Nome")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("NomeImagem");

                            b1.Property<string>("Url")
                                .HasColumnType("text")
                                .HasColumnName("UrlImagem");

                            b1.HasKey("PedidoItemId");

                            b1.ToTable("PedidoItens");

                            b1.WithOwner()
                                .HasForeignKey("PedidoItemId");
                        });

                    b.Navigation("Imagem")
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("CP.Pedidos.Domain.Entities.PedidoStatus", b =>
                {
                    b.HasOne("CP.Pedidos.Domain.Entities.Pedido", "Pedido")
                        .WithMany("Status")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("CP.Pedidos.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("Itens");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
